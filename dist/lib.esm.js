function t(){this.polygons=[]}t.fromPolygons=function(n){var o=new t;return o.polygons=n,o},t.prototype={clone:function(){var n=new t;return n.polygons=this.polygons.map((function(t){return t.clone()})),n},toPolygons:function(){return this.polygons},union:function(n){var o=new t.Node(this.clone().polygons),e=new t.Node(n.clone().polygons);return o.clipTo(e),e.clipTo(o),e.invert(),e.clipTo(o),e.invert(),o.build(e.allPolygons()),t.fromPolygons(o.allPolygons())},subtract:function(n){var o=new t.Node(this.clone().polygons),e=new t.Node(n.clone().polygons);return o.invert(),o.clipTo(e),e.clipTo(o),e.invert(),e.clipTo(o),e.invert(),o.build(e.allPolygons()),o.invert(),t.fromPolygons(o.allPolygons())},intersect:function(n){var o=new t.Node(this.clone().polygons),e=new t.Node(n.clone().polygons);return o.invert(),e.clipTo(o),e.invert(),o.clipTo(e),e.clipTo(o),o.build(e.allPolygons()),o.invert(),t.fromPolygons(o.allPolygons())},inverse:function(){var t=this.clone();return t.polygons.map((function(t){t.flip()})),t}},t.Vector=function(t,n,o){3==arguments.length?(this.x=t,this.y=n,this.z=o):"x"in t?(this.x=t.x,this.y=t.y,this.z=t.z):(this.x=t[0],this.y=t[1],this.z=t[2])},t.Vector.prototype={clone:function(){return new t.Vector(this.x,this.y,this.z)},negated:function(){return new t.Vector(-this.x,-this.y,-this.z)},plus:function(n){return new t.Vector(this.x+n.x,this.y+n.y,this.z+n.z)},minus:function(n){return new t.Vector(this.x-n.x,this.y-n.y,this.z-n.z)},times:function(n){return new t.Vector(this.x*n,this.y*n,this.z*n)},dividedBy:function(n){return new t.Vector(this.x/n,this.y/n,this.z/n)},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lerp:function(t,n){return this.plus(t.minus(this).times(n))},length:function(){return Math.sqrt(this.dot(this))},unit:function(){return this.dividedBy(this.length())},cross:function(n){return new t.Vector(this.y*n.z-this.z*n.y,this.z*n.x-this.x*n.z,this.x*n.y-this.y*n.x)}},t.Vertex=function(n,o,e,s){this.pos=new t.Vector(n),this.normal=new t.Vector(o),this.uv=e&&e.clone(),this.color=s&&new t.Vector(s)},t.Vertex.prototype={clone:function(){return new t.Vertex(this.pos.clone(),this.normal.clone(),this.uv&&this.uv.clone(),this.color&&this.color.clone())},flip:function(){this.normal=this.normal.negated()},interpolate:function(n,o){return new t.Vertex(this.pos.lerp(n.pos,o),this.normal.lerp(n.normal,o),this.uv&&n.uv&&this.uv.clone().lerp(n.uv,o),this.color&&n.color&&this.color.lerp(n.color,o))}},t.Plane=function(t,n){this.normal=t,this.w=n},t.Plane.EPSILON=1e-5,t.Plane.fromPoints=function(n,o,e){var s=o.minus(n).cross(e.minus(n)).unit();return new t.Plane(s,s.dot(n))},t.Plane.prototype={clone:function(){return new t.Plane(this.normal.clone(),this.w)},flip:function(){this.normal=this.normal.negated(),this.w=-this.w},splitPolygon:function(n,o,e,s,i){for(var r=0,l=[],c=0;c<n.vertices.length;c++){var h=(v=this.normal.dot(n.vertices[c].pos)-this.w)<-t.Plane.EPSILON?2:v>t.Plane.EPSILON?1:0;r|=h,l.push(h)}switch(r){case 0:(this.normal.dot(n.plane.normal)>0?o:e).push(n);break;case 1:s.push(n);break;case 2:i.push(n);break;case 3:var u=[],a=[];for(c=0;c<n.vertices.length;c++){var p=(c+1)%n.vertices.length,f=l[c],y=l[p],g=n.vertices[c],m=n.vertices[p];if(2!=f&&u.push(g),1!=f&&a.push(2!=f?g.clone():g),3==(f|y)){var v=(this.w-this.normal.dot(g.pos))/this.normal.dot(m.pos.minus(g.pos)),w=g.interpolate(m,v);u.push(w),a.push(w.clone())}}u.length>=3&&s.push(new t.Polygon(u,n.shared)),a.length>=3&&i.push(new t.Polygon(a,n.shared))}}},t.Polygon=function(n,o){this.vertices=n,this.shared=o,this.plane=t.Plane.fromPoints(n[0].pos,n[1].pos,n[2].pos)},t.Polygon.prototype={clone:function(){var n=this.vertices.map((function(t){return t.clone()}));return new t.Polygon(n,this.shared)},flip:function(){this.vertices.reverse().map((function(t){t.flip()})),this.plane.flip()}},t.Node=function(t){this.plane=null,this.front=null,this.back=null,this.polygons=[],t&&this.build(t)},t.Node.prototype={clone:function(){var n=new t.Node;return n.plane=this.plane&&this.plane.clone(),n.front=this.front&&this.front.clone(),n.back=this.back&&this.back.clone(),n.polygons=this.polygons.map((function(t){return t.clone()})),n},invert:function(){for(var t=0;t<this.polygons.length;t++)this.polygons[t].flip();this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();var n=this.front;this.front=this.back,this.back=n},clipPolygons:function(t){if(!this.plane)return t.slice();for(var n=[],o=[],e=0;e<t.length;e++)this.plane.splitPolygon(t[e],n,o,n,o);return this.front&&(n=this.front.clipPolygons(n)),o=this.back?this.back.clipPolygons(o):[],n.concat(o)},clipTo:function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},allPolygons:function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},build:function(n){if(n.length){this.plane||(this.plane=n[0].plane.clone());for(var o=[],e=[],s=0;s<n.length;s++)this.plane.splitPolygon(n[s],this.polygons,this.polygons,o,e);o.length&&(this.front||(this.front=new t.Node),this.front.build(o)),e.length&&(this.back||(this.back=new t.Node),this.back.build(e))}}};class n{constructor(t){this._THREE=t,this._csg=null}union(t){return o(this._THREE,this._csg.union(t._csg))}subtract(t){return o(this._THREE,this._csg.subtract(t._csg))}intersect(t){return o(this._THREE,this._csg.intersect(t._csg))}applyMatrix4(t){const o=this.build();return o.geometry.applyMatrix4(t),n._fromMesh(this._THREE,o)}build(){return function(t,n){const o=n.toPolygons();let e=0;const s=new Map;for(const{vertices:t,shared:{m:n,mI:i}}of o){const o=Array.isArray(n)?n[i]:n;s.has(o)||s.set(o,[]),s.get(o).push(t),e+=t.length}const i=new Float32Array(3*e),r=new Float32Array(3*e),l=new Float32Array(2*e),c=new Float32Array(3*e),h=[],u=new t.BufferGeometry;let a=0,p=0,f=0,y=0,g=0,m=0,v=0,w=!1,d=!1,b=!1,P=!1,x=!1,A=!1;const k=[];let z=0;for(const[t,n]of s.entries()){p=0;for(const t of n){for(let n=1,o=t.length-1;n<o;++n)k.push(z,z+n,z+n+1);z+=t.length,p+=3*(t.length-2);for(const{pos:n,normal:o,uv:e,color:s}of t)i.set([n.x,n.y,n.z],f),f+=3,d|=w=null!==o,r.set(w?[o.x,o.y,o.z]:[0,0,0],y),y+=3,P|=b=null!==e,l.set(b?e.toArray():[0,0],g),g+=2,A|=x=null!==s,c.set(x?[s.x,s.y,s.z]:[0,0,0],m),m+=3}h.push(t),u.addGroup(a,p,v),a+=p,v+=1}u.index=z>65536?new t.Uint32BufferAttribute(k,1):new t.Uint16BufferAttribute(k,1),u.setAttribute("position",new t.BufferAttribute(i,3)),d&&u.setAttribute("normal",new t.BufferAttribute(r,3));P&&u.setAttribute("uv",new t.BufferAttribute(l,2));A&&u.setAttribute("color",new t.BufferAttribute(c,3));return new t.Mesh(u,h)}(this._THREE,this._csg)}static _fromMesh(o,e){return function(o,e){const s=new n(o);return s._csg=t.fromPolygons(function(n,o){const e=o.clone();e.updateMatrix(),Array.isArray(o.material)&&(e.material=Array.from(o.material));const s=[],i=o.geometry,r=i.attributes.position.array,{normal:l,uv:c,color:h}=i.attributes,u=void 0!==l,a=u?l.array:null,p=void 0!==c,f=p?c.array:null,y=void 0!==h,g=y?h.array:null,m=i.index,v=m?m.count:r.length/3,w=!e.matrix.equals(new n.Matrix4);for(let o=0,l=0,c=0;o<v;o+=3){const h=[];for(let s=0;s<3;++s){const i=null===m?o+s:m.array[o+s];l=3*i,c=l+3;const v=w?(new n.Vector3).fromArray(r,l).applyMatrix4(e.matrix):r.subarray(l,c),d=u?a.subarray(l,c):null,b=p?(new n.Vector2).fromArray(f,2*i):null,P=y?g.subarray(l,c):null;h.push(new t.Vertex(v,d,b,P))}let v=0;for(const{start:t,count:n,materialIndex:e}of i.groups)if(o>=t&&o<t+n){v=e;break}s.push(new t.Polygon(h,{m:e.material,mI:v}))}return s}(o,e)),s}(o,e)}}function o(t,o){const e=new n(t);return e._csg=o,e}export default class{constructor(t){this._THREE=t}model(t){return n._fromMesh(this._THREE,t)}}
//# sourceMappingURL=lib.esm.js.map
